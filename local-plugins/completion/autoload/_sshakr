#compdef sshakr

local curcontext="$curcontext" state line
typeset -A opt_args
typeset -a common_remote_keys=( ops_ads noc_ads )

_arguments -C \
  ':cmd:->cmds' \
  '*:: :->args'

case "$state" in
  (cmds)
    local commands
    commands=(
		'audit:Audit EC2 key pairs'
		'help:Display help'
		'ping:Test connectivity to an AWS Jumphost'
		'rdp:Establish an RDP tunnel to a Windows host via ssh through Jumphost'
		'rotate:Rotate an ssh keypair'
		'scp:SCP through AWS Jumphost'
		'ssh:SSH through AWS Jumphost'
		'write_key:Upload an existing ssh keypair'
    )
    _describe -t commands 'command' commands
    ;;
  (args)
    case $line[1] in
      (ssh)
		_arguments \
			'*-v[increase output verbosity]' \
			'-a[AWS account id]: ' \
			'-r[AWS region]: ' \
			'-J[jumphost]: ' \
			'(-l -L)-k[use remote keypair]:remote keypair:->remotekeypairs' \
			'(-k -L)-l[use local keypair]:keypair:->keypairs' \
			'(-k -l)-L[use remote keypair and save locally]:remote keypair:->remotekeypairs' \
			'(-):user and hostname:->userhost' \
			':remote command:'
		case $state in
			(keypairs)
				local -a keypairs
				keypairs=($( ls ~/.ssh/**/*.pem ))
				_values 'keypair' ${keypairs[@]:t:r}
				;;
			(userhost)
				typeset -a users
				users=('ec2-user:' 'root:')
				_describe 'userhost' users -S '@'
				;;
			(remotekeypairs)
				_describe 'common remote keypairs' common_remote_keys
				;;
		esac
		;;
	(ping)
		_arguments \
			'-h[display help]' \
			'-v[increase output verbosity]' \
			'-J[jumphost]: '
		;;
	(scp)
		_arguments \
			'*-v[increase output verbosity]' \
			'-a[AWS account id]: ' \
			'-r[AWS region]: ' \
			'-J[jumphost]: ' \
			'(-l -L)-k[use remote keypair]:remote keypair:->remotekeypairs' \
			'(-k -L)-l[use local keypair]:keypair:->keypairs' \
			'(-k -l)-L[use remote keypair and save locally]:remote keypair:->remotekeypairs' \
			'(-):source user and hostname and file:->userhostfile' \
			'(-):destination user and hostname and file:->userhostfile'
		case $state in
			(keypairs)
				local -a keypairs
				keypairs=($( ls ~/.ssh/**/*.pem ))
				_values 'keypair' ${keypairs[@]:t:r}
				;;
			(userhostfile)
				typeset -a users
				users=('ec2-user:' 'root:')
				_describe 'user@host:file' users -S '@'
				;;
			(remotekeypairs)
				_describe 'common remote keypairs' common_remote_keys
				;;
		esac
		;;
	(audit)
		_arguments \
			'-p[AWS profile]: ' \
			'-r[AWS region]: ' \
			'-v[enable verbose output]'
		;;
	(rotate)
		_arguments \
			'-p[AWS profile]: ' \
			'-a[AWS account id]: ' \
			'-r[AWS region]: ' \
			'-J[jumphost]: ' \
			'-k[AWS keypair name]: ' \
			'*-v[increase output verbosity]'
		;;
	(write_key)
		_arguments \
			'*-v[increase output verbosity]' \
			'-p[AWS profile]: ' \
			'-a[AWS account id]: ' \
			'-r[AWS region]: ' \
			'-J[jumphost]: ' \
			'-k[AWS keypair name]: ' \
			'-f[existing keypair name]:keypair:->keypairs'
		case $state in
			(keypairs)
				local -a keypairs
				keypairs=($( ls ~/.ssh/**/*.pem ))
				_values 'keypair' ${keypairs[@]:t:r}
				;;
		esac
		;;
    esac
    ;;
esac

return 0
